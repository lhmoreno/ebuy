import type { NextPage } from 'next'

import Head from 'next/head'
import NextLink from 'next/link'
import { FormEvent, Fragment, useRef } from 'react'
import { Button, Container, Flex, Heading, Input, Link } from '@chakra-ui/react'

import { Header } from '../components/Header'

interface EmailElement extends HTMLInputElement {
  isFocused: boolean
}

const Login: NextPage = () => {
  const emailRef = useRef<EmailElement>(null)
  const passwordRef = useRef<HTMLInputElement>(null)

  function onSubmitLogin(event: FormEvent) {
    event.preventDefault()

    if (!passwordRef.current || !emailRef.current) return

    const { value: email } = emailRef.current
    const { value: password } = passwordRef.current

    if (email === '') return
    
    if (emailRef.current.isFocused) {
      passwordRef.current.focus()
      return
    }
    
    if (password.length < 4) return

    console.log({
      email,
      password
    })
  }

  return (
    <Fragment>
      <Head>
        <title>Ebuy | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <Container 
        maxW="container.xl" 
        height="calc(100vh - 93px)"
        display="flex" 
        alignItems="center" 
        justifyContent="center"
      >
        <Flex
          width="96"
          height="96"
          padding="8"
          flexDirection="column"
          justifyContent="center"
          gap="2"
          borderRadius="lg"
          backgroundColor="blackAlpha.200"
        >
          <Flex marginBottom="4" justifyContent="space-between">
            <Heading
              as="h2"
              fontSize="2xl"
            >
              Login
            </Heading>
            <NextLink href="/sigin" passHref>
              <Link color="blue.500">
                Criar conta
              </Link>
            </NextLink>
          </Flex>
          <form onSubmit={onSubmitLogin}>
            <Input 
              ref={emailRef}
              autoFocus
              onFocus={() => {
                if (emailRef.current) {
                  return emailRef.current.isFocused = true
                }
              }}
              onBlur={() => {
                if (emailRef.current) {
                  return emailRef.current.isFocused = false
                }
              }}
              type="email"
              placeholder="Digite seu email"
              backgroundColor="white"
            />
            <Input 
              ref={passwordRef}
              type="password"
              autoComplete="on"
              marginTop="2"
              placeholder="Digite sua senha"
              backgroundColor="white"
            />
            <Button
              type="submit"
              marginTop="2"
              width="full"
              colorScheme="blackAlpha"
            >ENTRAR</Button>
          </form>
          <NextLink href="/forgot-password" passHref>
            <Link color="blue.500" textAlign="center" marginTop="4">
              Esqueci minha senha
            </Link>
          </NextLink>
        </Flex>
      </Container>
    </Fragment>
  )
}

export default Login
